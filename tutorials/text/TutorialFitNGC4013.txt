/**

\page TutorialFitNGC4013 Fitting the NGC4013 galaxy with FitSKIRT

\image html TutorialFitNGC4013_g.png

<i>Illustration above</i>: observed SDSS g-band surface brightness of NGC4013 prepared for use with \c FitSKIRT; the
black regions are masked to remove foreground features.

In this tutorial you will employ <tt>FitSKIRT</tt> to fit an axisymmetric computer model to observed images of the
edge-on spiral galaxy NGC4013 in multiple wavelength bands. The procedure includes the following steps, reflected in
the structure of this tutorial.

- Download the observational data in a form already prepared for use with <tt>FitSKIRT</tt>.
- Configure the \em ski file (\c SKIRT parameter file) representing the model that will be fitted to the data.
- Configure the \em fski file (\c FitSKIRT parameter file) that governs the fitting procedure.
- Run \c FitSKIRT and interprete the results.

\section TutorialFitNGC4013Prep Getting ready

This tutorial assumes that you have completed some of the introductory <tt>SKIRT</tt> tutorials, or that you have
otherwise acquired the working knowlegde introduced there. At the very least, before starting this tutorial, you should
have installed the <tt>SKIRT</tt> project and a FITS file viewer (preferably DS9).

To complete this tutorial, you need the relevant observations of NGC4013 in a form already prepared for use with
<tt>FitSKIRT</tt>. Download the archive <tt>tutorial_NGC4013_prepared.zip</tt> from the <a
href="../version8/_downloads.html">SKIRT downloads page</a> and extract its contents (the files <tt>*_norm.fits</tt>) into
your local working directory.


\section TutorialFitNGC4013Model Configuring the model

\subsection TutorialFitNGC4013ModelSki Creating a ski file

As a first step, you need to configure a regular \c SKIRT parameter file representing the galaxy model that you will
employ in the fitting procedure. This ski file should have arbitrary but realistic values for the model parameters that
you want to recover by fitting the model to the observed data. In this tutorial, you will use just the observed
\f$u\f$- and \f$g\f$-band images. Extending the procedure for additional bands is straightforward, and is left as an
exercise.

Using the \c SKIRT console Q&A or the \c MakeUp GUI wizard, create a new ski file called \c SpiralOrig.ski with the
following characteristics:

- An oligochromatic simulation with the two wavelengths 0.356 and 0.470 \f$\mu\f$m, centered at the \f$u\f$- and
  \f$g\f$-band respectively.
- Extragalactic units with neutral-style flux output.
- A first stellar component using a \em flattened Sérsic geometry with effective radius 2500 pc, Sérsic index 2.5, and
  flattening parameter 0.5. Remember to first select the decorator that constructs a spheroidal variant of a target
  geometry, and then the spherical Sérsic geometry as the target.
- A second stellar component using an exponential disk geometry with scale length 4400 pc and scale height 500 pc,
  without any inner or outer truncation.
- Luminosities set arbitrarily to \f$L_\lambda = 10^{20}~\text{L}_\odot/\mu\text{m}\f$ for both stellar components and
  for both wavelengths (i.e. four luminosities in total). These values are used as the units in which FitSKIRT
  represents the luminosities corresponding to an optimal fit to the observations. Because the observed images in this
  tutorial have been normalized, these units are not physical. Instead the values have simply been chosen to obtain
  "luminosities" in a range from 1 to 100.
- A single dust distribution component using an exponential disk geometry with scale length 6600 pc and scale height
  250 pc, without any inner or outer truncation.
- The default dust mix with average interstellar properties.
- Dust component normalization on total dust mass with \f$M_\text{dust}=4\times10^7\,\text{M}_\odot\f$.
- An axisymmetric dust grid in cylindrical coordinates with cylindrical radius 25 kpc, and vertical limits
  -4 kpc to 4 kpc.
- A radial logarithmic mesh with 200 bins and default central bin width fraction.
- A vertical symmetric power-law mesh with 200 bins and bin width ratio 50.
- A single instrument with a different frame per wavelength (a "MultiFrameInstrument") with two frames (one for each
  wavelength in the simulation) at distance 18.6 Mpc (the estimated distance of NGC4013) and inclination 90 deg.
- Properties for both frames: total field of view 28496 pc by 5194 pc centered on the origin; 790 by 144 pixels.
- A small number of photon packages per wavelength, e.g. \f$10^4\f$.

Before moving on to the next step, run \c SKIRT for the newly configured ski file and verify that the output is as
expected. Specifically, verify the convergence of the dust grid (total dust mass in the grid should be within roughly
10% of the theoretical, expected mass) and review the files produced by the MultiFrameInstrument. Enabling this
verification is the main reason for specifying realistic values in the ski file, even for properties that will be
fitted to the observed data later on.

\subsection TutorialFitNGC4013ModelTemplate Turning the ski file into a template

After verifying that the \c SKIRT model is appropriate, you need to turn the ski file into a template for use with \c
FitSKIRT. Make a copy of the ski file, perhaps called \c SpiralTemplate.ski, and open the copy in a text editor.

First ensure that all properties named <em>write...</em> throughout the ski file are set to "false", with the sole
exception of the \em writeStellarComps property of the \c MultiFrameInstrument. While it is not a fatal error if any of
the other \em write properties are enabled, the generated output will be ignored by \c FitSKIRT. Because the simulation
defined in the ski file will be performed literally thousands of times, producing unneeded output would be a waste of
computing resources.

Next, and most importantly, you need to indicate the \em free parameters of the model in the ski file template, i.e.
the parameters that will be adjusted by \c FitSKIRT to find an optimal fit to the observed data. For the luminosities
of the stellar components, nothing needs to be done because they are automatically treated as free parameters. The
other free parameters are defined by placing the corresponding property values between square brackets and adding a
label for identification, as shown in the example below.

In this tutorial, there are four free luminosity parameters (two stellar components for each of two wavelengths) and
you will use nine additional free model parameters: inclination; scale length and height of the stellar disk; effective
radius, Sérsic index and flattening parameter of the stellar bulge; scale length and height of the dust disk; and total
dust mass. Locate the corresponding property values in the ski file and adjust them as follows (only the lines that
actually need updating are shown; dots indicate portions of the line that remain unchanged):

\verbatim
<SpheroidalGeometryDecorator flattening="[bulge_flattening:0.5]">
<SersicGeometry effectiveRadius="[bulge_radius:2500 pc]" index="[bulge_index:2.5]"/>
<ExpDiskGeometry scaleLength="[stellar_length:4400 pc]" scaleHeight="[stellar_height:500 pc]" ...>
<ExpDiskGeometry scaleLength="[dust_length:6600 pc]" scaleHeight="[dust_height:250 pc]"
<DustMassDustCompNormalization dustMass="[dust_mass:4e7 Msun]"/>
<MultiFrameInstrument instrumentName="ins" distance="18.6 Mpc" inclination="[inclination:90 deg]" ...>
\endverbatim

Save your changes and run the template ski file with \c SKIRT as a basic syntactic check of your changes. \c SKIRT
recognizes and ignores the square brackets and the label in property values, so the results should be as before (except
that just the output files produced by the instrument are now present).


\section TutorialFitNGC4013Scheme Configuring the fitting scheme

The next step is to configure a parameter file for \c FitSKIRT. This file has the ".fski" filename extension and is
commonly called an fski file. It specifies the various aspects of a particular fitting scheme, including the name of
the ski file defining the model, the ranges for the free model parameters, the observational reference images, and the
parameters of the genetic search algorithm.

Creating an fski file is similar to creating a ski file. You can use the \c FitSKIRT console Q&A (enter the \c fitskirt
command in a Terminal window without any arguments), or you can use the \c MakeUp GUI wizard (select the appropriate
option in the initial wizard pane).

\subsection TutorialFitNGC4013SchemeSki Units and ski template

\verbatim
   Welcome to FitSKIRT ...
   ...
 ? Enter the name of the fski file to be created: SpiralFit
   ...
   Possible choices for the units system:
      1. SI units
      2. Stellar units (length in AU, distance in pc)
      3. Extragalactic units (length in pc, distance in Mpc)
 ? Enter one of these numbers [1,3] (3):
   Possible choices for the output style for flux density and surface brightness:
      1. Neutral: λ F_λ = ν F_ν
      2. Wavelength: F_λ
      3. Frequency: F_ν
 ? Enter one of these numbers [1,3] (1): 1
   ...
 ? Enter the name of the ski file specifying the SKIRT simulation: SpiralTemplate
\endverbatim

Provide an appropriate name for the \c FitSKIRT parameter file under construction, for example \c SpiralFit (the
filename extension will be added automatically).

Subsequently, specify the same units system and flux output style as in the ski file that defines the model. If there
is a mismatch for the units system and/or the flux output style, \c FitSKIRT will terminate with a fatal error when
performing the fitting scheme. (Unfortunately the implementation cannot automatcially extract the units information
from the ski file while constructing the fski file.)

Finally, enter the name of the ski file that defines the model to be fitted, e.g. \c SpiralTemplate in this tutorial
(again, the filename extension will be added automatically).

\subsection TutorialFitNGC4013SchemeFree Free parameters other than luminosities

\verbatim
   ...
   Possible choices for item #1 in the parameter ranges list:
      1. A parameter range
   Automatically selected the only choice: 1
 ? Enter the label identifying this parameter range: inclination
   Possible choices for the type of physical quantity represented by this parameter range:
      1. Dimensionless
      2. Length
      3. Distance
      4. Mass
      5. Position angle
 ? Enter one of these numbers [1,5] (2): 5
 ? Enter the minimum value in this parameter range ]-∞ deg,∞ deg[: 88
 ? Enter the maximum value in this parameter range ]-∞ deg,∞ deg[: 92

  Possible choices for item #2 in the parameter ranges list:
      1. A parameter range
 ? Enter one of these numbers or zero to terminate the list [0,1] (1):
   ...
\endverbatim

For each of the free parameters indicated in the ski template (see \ref TutorialFitNGC4013ModelTemplate), you need to
enter the search range (i.e. the range of values that will be searched while looking for an optimal fit), in addition
to the type of physical quantity involved (so that \c FitSKIRT knows which units to use). The example above shows the
questions and responses for the free parameter labeled \em inclination. Continue adding parameter ranges until you
have specified all nine free parameters (not shown in the example), using the information in the table below.
The order of the parameter ranges in the fski file determines the order in which \c FitSKIRT reports fitting results
for the parameters; other than that the order does not influence the results.

| label | phys. qty | min. value | max. value
|-------|-----------|------------|------------
| inclination | Position angle | \f$88^\circ\f$ | \f$92^\circ\f$
| bulge_radius | Length | 200 pc | 5000 pc
| bulge_index | Dimensionless | 0.51 | 6.99
| bulge_flattening | Dimensionless | 0.01 | 1
| stellar_length | Length | 500 pc | 8000 pc
| stellar_height | Length | 100 pc | 1000 pc
| dust_length | Length | 1000 pc | 12000 pc
| dust_height | Length | 50 pc | 800 pc
| dust_mass | Mass | \f$10^6\,\text{M}_\odot\f$ | \f$10^8\,\text{M}_\odot\f$

\subsection TutorialFitNGC4013SchemeRef Reference images and luminosities

\verbatim
   ...
   Possible choices for item #1 in the reference images list:
      1. A reference image
   Automatically selected the only choice: 1
 ? Enter the name (or relative path) of this reference image: u_norm.fits
   Possible choices for the convolution kernel:
      1. A Gaussian convolution kernel
      2. A convolution kernel read from a FITS file
 ? Enter one of these numbers [1,2] (1):
 ? Enter the full width at half max in pixels ]0,1000] (3): 1.7
 ? Enter the dimension in pixels of the kernel frame [1,1000] (6):
 ? Enter the minimum luminosity factors, one per stellar component ]0,∞[: 1, 1
 ? Enter the maximum luminosity factors, one per stellar component ]0,∞[: 100, 100

   Possible choices for item #2 in the reference images list:
      1. A reference image
 ? Enter one of these numbers or zero to terminate the list [0,1] (1):
   ...
\endverbatim

For each wavelength in the simulation you need to add the corresponding reference image (i.e. the target image to be
fitted). In addition you need to specify information about the point-spread function (PSF) of the instrument that
captured the image, so that \c FitSKIRT can convolve the synthetic image produced by the \c SKIRT simulation with an
appropriate kernel before comparing it to the observed image. Finally, you need to set a luminosity search range per
stellar component.

The example above shows how to add the \f$u\f$-band reference image for this tutorial, using a Gaussian convolution
kernel with full width at half max (FWHM) of 1.7 pixels and a frame dimension of 6 pixels (the default value). Specify
a luminosity range from 1 to 100 for each stellar component, because the luminosity units were chosen to obtain this
range (see \ref TutorialFitNGC4013ModelSki). For the \f$g\f$-band reference image (<tt>g_norm.fits</tt>), use a FWHM of
1.6 pixels and the same luminosity range (not shown).

\subsection TutorialFitNGC4013SchemeOpt Optimization settings

\verbatim
   ...
   Possible choices for the optimization settings:
      1. The optimization setup
   Automatically selected the only choice: 1
 ? Enter the number of individuals in the population [0,1000] (100): 20
 ? Enter the number of generations to be evaluated  [0,1000] (100): 5
 ? Enter the mutation probability ]0,1[ (0.03):
 ? Enter the crossover probability ]0,1[ (0.65):
   ...
\endverbatim

The last step is to setup the parameters for the genetic algorithm. To limit the computation time for this tutorial,
specify a limited population size of 20 individuals, to be carried forward for only 5 generations. The mutation and
crossover probabilities can be left to the default values.

\note It is important to realize that the numbers used in this tutorial are much too low for an actual research
situation. A good fitting run will need a lot more of everything (photon packages, individuals, and generations). For a
good quality run, use \f$5\times10^5\f$ photon packages, 200 individuals in a population, and 100 generations.


\section TutorialFitNGC4013Run Running FitSKIRT

\subsection TutorialFitNGC4013RunLaunch Launching

By default \c FitSKIRT operates on a single processor. Because a typical fitting run is  computationally expensive,
it is best to request the use of  multiple processors.  \c FitSKIRT supports two major parallelization modes. If
\c FitSKIRT is running on a laptop or desktop computer, use shared-memory parallelization (multi-threading).
For example:

\verbatim
fitskirt -s 4 SpiralFit
\endverbatim

If \c FitSKIRT is running on a server, and it was built with MPI enabled (see the Installation Guide), use
distributed-memory parallelization (multi-processing). For example:

\verbatim
mpirun -n 12 fitskirt SpiralFit
\endverbatim

\subsection TutorialFitNGC4013RunLog The message log

\verbatim
   Welcome to FitSKIRT ...
   ...
   Number of stellar components in this simulation: 2
   Number of wavelengths in this simulation: 2
   The simulation's instrument name is : ins
   ...
\endverbatim

During setup, \c FitSKIRT lists some information about the ski file template in use, most notably the number of stellar
components and wavelengths.

\verbatim
   ...
   Evaluating generation 0
     Slave 1 running SKIRT model for individual 0
     Slave 2 running SKIRT model for individual 1
     ...
   Setting Scores
   Found new best fit; serial nr 0
   Writing best fitting frame to ...SpiralFit_best_0_0.fits...
   ...
\endverbatim

\c FitSKIRT then begins evaluating the individuals in the first-generation population. Each evaluation consists of
running a \c SKIRT simulation with free parameter values corresponding to the genes of the individual. After all
individuals in the population have been processed and scored, information about the best fitting individual is written
to disk. The genetic algorithm then replaces part of the individuals in the population, and the process is repeated for
the next generation. At the end of each generation, if there is an individual representing a better fit than the
previous best fit, it is recorded.

\subsection TutorialFitNGC4013RunOut Actual output

The output of the individual \c SKIRT simulations governed by \c FitSKIRT is stored in a temporary folder called
<tt>prefix_tmp</tt>. These files are removed after all processing for a generation has been completed. Instead, \c
FitSKIRT records summary information in its output files. For example, the column text file
<tt>prefix_all_simulations.dat</tt> records a single summary line for each \c SKIRT simulation performed during the
run. This information is mostly relevant for debugging purposes.

More importantly, the column text file <tt>prefix_best_simulations.dat</tt> records a single summary line for each new
best fit found at the end of each generation (if any). Consequently, the last line provides the final solution. The
contents of the columns is described in the header of the file. The first column is a serial number linking the row to
the best fitting images and residuals discussed below. Subsequent columns list the best fitting free parameter values,
including the luminosities. These are followed by the total \f$\chi^2\f$ value and finally the \f$\chi^2\f$ values for
each wavelength. For ease of reference, there are a few extra spaces just before the total \f$\chi^2\f$ value.

The synthetic images for the sequence of best fitting models are stored as <tt>prefix_best_X_Y.fits</tt> where X is
replaced by the serial number in the first column of <tt>prefix_best_simulations.dat</tt> and Y is the replaced by the
wavelength index (in this case 0 being \f$u\f$-band and 1 being \f$g\f$-band). These images are adjusted to the best
fitting luminosity, are convolved with the appropriate beam, and have the same masked regions as the reference images.
Additionally corresponding residual images are created, <tt>tutorial_residual_X_Y.fits</tt>, where each pixel is
calculated as abs((reference - best_fit)/reference).

When reviewing the output from this fitting run, keep in mind that the numbers used in this tutorial are much too low
for an actual research situation (see note at the end of \ref TutorialFitNGC4013SchemeOpt). Furthermore, it is wise to
perform multiple fitting runs with the same data (and a different random realization of the search). Comparing the
results from multiple runs allows estimating an error bar on the free parameter values obtained with \c FitSKIRT.


*/
